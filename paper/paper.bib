@article{Ptolemy,
    author = {Johan Eker and Jorn W Janneck and Edward A. Lee
              and Jie Liu and Xiaojun Liu and Jozsef Ludvig and
              Sonia Sachs and Yuhong Xiong and Stephen
              Neuendorffer},
    title = { Taming heterogeneity - the Ptolemy approach},
    journal = {Proceedings of the IEEE},
    volume = {91},
    number = {1},
    pages = {127-144},
    year = {2003},
    abstract = {Modern embedded computing systems tend to be
              heterogeneous in the sense of being composed of
              subsystems with very different characteristics,
              which communicate and interact in a variety of
              ways-synchronous or asynchronous, buffered or
              unbuffered, etc. Obviously, when designing such
              systems, a modeling language needs to reflect this
              heterogeneity. Today's modeling environments
              usually offer a variant of what we call amorphous
              heterogeneity to address this problem. This paper
              argues that modeling systems in this manner leads
              to unexpected and hard-to-analyze interactions
              between the communication mechanisms and proposes
              a more structured approach to heterogeneity,
              called hierarchical heterogeneity, to solve this
              problem. It proposes a model structure and
              semantic framework that support this form of
              heterogeneity, and discusses the issues arising
              from heterogeneous component interaction and the
              desire for component reuse. It introduces the
              notion of domain polymorphism as a way to address
              these issues.},
    URL = {http://chess.eecs.berkeley.edu/pubs/488.html}
}
@Article{Metzler2020,
author={Metzler, Patrick
and Suri, Neeraj
and Weissenbacher, Georg},
title={Extracting safe thread schedules from incomplete model checking results},
journal={International Journal on Software Tools for Technology Transfer},
year={2020},
month={Oct},
day={01},
volume={22},
number={5},
pages={565-581},
abstract={Model checkers frequently fail to completely verify a concurrent program, even if partial-order reduction is applied. The verification engineer is left in doubt whether the program is safe and the effort toward verifying the program is wasted. We present a technique that uses the results of such incomplete verification attempts to construct a (fair) scheduler that allows the safe execution of the partially verified concurrent program. This scheduler restricts the execution to schedules that have been proven safe (and prevents executions that were found to be erroneous). We evaluate the performance of our technique and show how it can be improved using partial-order reduction. While constraining the scheduler results in a considerable performance penalty in general, we show that in some cases our approach---somewhat surprisingly---even leads to faster executions.},
issn={1433-2787},
doi={10.1007/s10009-020-00575-y},
url={https://doi.org/10.1007/s10009-020-00575-y}
}


@ARTICLE{lustre,
  author={Halbwachs, N. and Caspi, P. and Raymond, P. and Pilaud, D.},
  journal={Proceedings of the IEEE}, 
  title={The synchronous data flow programming language LUSTRE}, 
  year={1991},
  volume={79},
  number={9},
  pages={1305-1320},
  doi={10.1109/5.97300}}
  
@book{FeilerModelBasedEngineering2012,
	title = {Model-Based Engineering with AADL: An Introduction to the SAE Architecture Analysis \& Design Language},
	author={Peter Feiler and David Gluch},
	year={2012},
	publisher={Addison-Wesley Professional},
}

@ARTICLE{8625938,
  author={Cofer, Darren and Gacek, Andrew and Backes, John and Whalen, Michael W. and Pike, Lee and Foltzer, Adam and Podhradsky, Michal and Klein, Gerwin and Kuz, Ihor and Andronick, June and Heiser, Gernot and Stuart, Douglas},
  journal={Computer}, 
  title={A Formal Approach to Constructing Secure Air Vehicle Software}, 
  year={2018},
  volume={51},
  number={11},
  pages={14-23},
  doi={10.1109/MC.2018.2876051}}

@article{GAO2008111,
title = {Extending Lustre with Timeout Automata},
journal = {Electronic Notes in Theoretical Computer Science},
volume = {203},
number = {4},
pages = {111-124},
year = {2008},
note = {Proceedings of the International Workshop on Model-driven High-level Programming of Embedded Systems (SLA++P 2007)},
issn = {1571-0661},
doi = {https://doi.org/10.1016/j.entcs.2008.05.014},
url = {https://www.sciencedirect.com/science/article/pii/S1571066108003289},
author = {Jimin Gao and Mike Whalen and Eric {Van Wyk}}}

@inproceedings{AADL2TLA,
  title={Towards a formal semantics for AADL execution model},
  author={Jean-François Rolland and Jean-Paul Bodeveix and David Chemouil and Mamoun Filali and D. Thomas},
 booktitle={4th International Congress on Embedded Real Time Software and Systems (ERTS 2008)},
  year={2008}
}

@INPROCEEDINGS{AADL2TASM,
  author={Zhibin Yang and Kai Hu and Dianfu Ma and Lei Pi},
  booktitle={2009 Design, Automation   Test in Europe Conference   Exhibition}, 
  title={Towards a formal semantics for the AADL behavior annex}, 
  year={2009},
  volume={},
  number={},
  pages={1166-1171},
  doi={10.1109/DATE.2009.5090839}}
  
 @InProceedings{AADL2BIP,
author="Chkouri, M. Yassin
and Robert, Anne
and Bozga, Marius
and Sifakis, Joseph",
editor="Chaudron, Michel R. V.",
title="Translating AADL into BIP - Application to the Verification of Real-Time Systems",
booktitle="Models in Software Engineering",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="5--19",
isbn="978-3-642-01648-6"
}

@INPROCEEDINGS{AADS,
  author={Varona-Gómez, Roberto and Villar, Eugenio},
  booktitle={2009 14th IEEE International Conference on Engineering of Complex Computer Systems}, 
  title={AADL Simulation and Performance Analysis in SystemC}, 
  year={2009},
  volume={},
  number={},
  pages={323-328},
  doi={10.1109/ICECCS.2009.11}}
  
@article{AADL2Sync,
author = {Jahier, Erwan and Halbwachs, Nicolas and Raymond, Pascal and Nicollin, Xavier and Lesens, David},
year = {2007},
month = {10},
pages = {},
title = {Virtual Execution of AADL Models via a Translation into Synchronous Programs},
journal = {EMSOFT'07: Proceedings of the Seventh ACM and IEEE International Conference on Embedded Software},
doi = {10.1145/1289927.1289951}
}

@article{pals,
	author = {Meseguer, Jos{\'e} and \"{O}lveczky, Peter Csaba},
	title = {Formalization and Correctness of the PALS Architectural Pattern for Distributed Real-time Systems},
	journal = {Theor. Comput. Sci.},
	volume = {451},
	month = sep,
	year = {2012},
	pages = {1--37},
	numpages = {37},
	keywords = {Distributed real-time systems, Formally verified architectural patterns, Model checking, Rewriting logic, Synchronizers},
}

@Inbook{Clarke2012,
author="Clarke, Edmund M.
and Klieber, William
and Nov{\'a}{\v{c}}ek, Milo{\v{s}}
and Zuliani, Paolo",
editor="Meyer, Bertrand
and Nordio, Martin",
title="Model Checking and the State Explosion Problem",
bookTitle="Tools for Practical Software Verification: LASER, International Summer School 2011, Elba Island, Italy, Revised Tutorial Lectures",
year="2012",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="1--30",
abstract="Model checking is an automatic verification technique for hardware and software systems that are finite state or have finite state abstractions. It has been used successfully to verify computer hardware, and it is beginning to be used to verify computer software as well. As the number of state variables in the system increases, the size of the system state space grows exponentially. This is called the ``state explosion problem''. Much of the research in model checking over the past 30 years has involved developing techniques for dealing with this problem. In these lecture notes, we will explain how the basic model checking algorithms work and describe some recent approaches to the state explosion problem, with an emphasis on Bounded Model Checking.",
isbn="978-3-642-35746-6"}
}